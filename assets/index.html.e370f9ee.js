import{_ as t,r as o,o as r,c as p,a as e,b as n,F as c,d as a,e as l}from"./app.4fb1202a.js";const i={},d=e("h1",{id:"back-end-node-js-server",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#back-end-node-js-server","aria-hidden":"true"},"#"),a(" Back-End Node.js Server")],-1),u=e("p",null,"Kibanalytics uses Node.js with Express to collect and process data from the client side KBS tracker library. To increase security, it includes a customizable payload schema verification that can be enabled or disabled with EXPRESS_VALIDATE_JSON_SCHEMA enviroment variable.",-1),h=e("p",null,"Also, it's possible to add custom data / processing steps with the plugin system.",-1),m=e("h2",{id:"payload-schema-validation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#payload-schema-validation","aria-hidden":"true"},"#"),a(" Payload Schema Validation")],-1),b=a("The validator uses "),y={href:"https://ajv.js.org",target:"_blank",rel:"noopener noreferrer"},k=a("AJV"),v=a(" library and "),f={href:"https://json-schema.org",target:"_blank",rel:"noopener noreferrer"},g=a("JSON Schema"),_=a(` to check the payload from the client side KBS tracker library. It can be enabled by setting the EXPRESS_VALIDATE_JSON_SCHEMA to "1". It's recomended to enable the payload verification as KBS accepts custom payloads, and a malicious user can send large payloads continuously to overload the Kibanalytics server and database.`),q=l(`<p>By default, Kibanalytics includes two schemas: &quot;collect&quot; and &quot;click&quot;.</p><h3 id="collect-schema" tabindex="-1"><a class="header-anchor" href="#collect-schema" aria-hidden="true">#</a> Collect Schema</h3><p>This schema will validate the default payload for the events generated by the KBS tracker library. If you&#39;re using custom server side properties, you have to edit &quot;serverSide&quot; property to fit your needs.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> serverSide <span class="token operator">=</span> <span class="token punctuation">{</span> 
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;string&#39;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">additionalProperties</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="click-schema" tabindex="-1"><a class="header-anchor" href="#click-schema" aria-hidden="true">#</a> Click Schema</h3><p>This schema will validate the default payload for click events generated by the KBS tracker library. If you&#39;re using custom server side properties, you have to edit &quot;serverSide&quot; property to fit your needs.</p><h3 id="custom-schemas" tabindex="-1"><a class="header-anchor" href="#custom-schemas" aria-hidden="true">#</a> Custom Schemas</h3><p>Any custom event payload can be validated with the schemas defined inside &quot;/src/schemas/events&quot; folder. The filename will correspond to the event type it will validate, for exemple, for a custom event named &quot;add-new-user&quot;, you have to create a new file called &quot;add-new-user.schema.js&quot; and export a valid AJV JSON Schema object.</p><p>Use &quot;/src/schemas/events/custom.schema.js&quot; as base for your custom events payload schema.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The schemas defined under &quot;/src/schemas/events&quot; folder will validate only the payload property. Other standard properties will be validated with &quot;/src/schemas/endpoints/collect.schema.js&quot;.</p></div><h2 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> Plugins</h2><p>Kibanalytics have a simple plugin system to process / change / add data to the final output to be saved to the database and showed on Kibana.</p><p>The system works by setting a shared data context that each plugin have access and permission to manipulate.</p><p>For new plugins, just create a new file under the &quot;plugins&quot; folder like &quot;your-plugin.plugin.js&quot; with the follow function signature and exports the function:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myPlugin</span><span class="token punctuation">(</span><span class="token parameter">req</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token comment">/* 
       req object from Express middleware
       Shared context can be acessed on req.data property 
     */</span>
    req<span class="token punctuation">.</span>data<span class="token punctuation">.</span>myPlugin <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Plugins defined under &quot;/src/plugins&quot; folder will be loaded automatically. If you want take control over the plugin load order, just edit &quot;/src/plugins/index.js&quot; and manually add each plugin to the &quot;plugins&quot; array variable with the desired execution order based on array index.</p></div><p>Out of the box, Kibanalytics includes several plugins to enrich the collected data from events. For further details, please check the implementation code for each plugin.</p>`,17);function w(x,S){const s=o("ExternalLinkIcon");return r(),p(c,null,[d,u,h,m,e("p",null,[b,e("a",y,[k,n(s)]),v,e("a",f,[g,n(s)]),_]),q],64)}var E=t(i,[["render",w],["__file","index.html.vue"]]);export{E as default};
